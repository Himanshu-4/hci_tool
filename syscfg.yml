# System-wide configuration file
# Defines paths, modules, and global application settings


###=========================================================
############ rules for defineing the variables and using them
###=========================================================
# symbol defination rules is like ${SYMBOL_NAME} : SYMBOL_VALUE
# ENV variable defined using $ENV{VAR_NAME} : VAR_VALUE
# noraml variable defined using $VAR{VAR_NAME} : VAR_VALUE
# the VAR_VALUE will not contain any other symbol defination 
# VAR_VALUE can be string or dict and that dic can contain ${VAR_EXPANSION} 
# only at the key position  are allowed for the defination of vars and value postion for expansion of that var, otherwise give error
# first symbol DB is generated for the expanded yml files and then vars are resolved 
# ENV values take priority if having same VAR_NAME
# VAR_NAME can only be in captial letters and parser will raise error if not

############################################################
# Global settings
############################################################
global:

  # --------------- please note that this global and application parent is the only thing that parser care about 
  # ---------------- to build symbol database and this db is used for further YAML processing for the current ver
  # Environment variables

  $ENV{BASE_DIR}  : .
  $ENV{LOG_DIR} : ./app_data/logs
  $ENV{MAX_FILE_SIZE} : 10485760
  $ENV{MAX_FILES} : 5
  $ENV{FLUSH_INTERVAL} : 2.0

  # global symbols definations 
  # Global settings applied to all loggers
  $VAR{BASE_DIR} : .  # Support environment variables with defaults
  $VAR{LOG_DIR} : ./app_data/logs  # Support environment variables with defaults
  $VAR{MAX_FILE_SIZE} : 10485760     # 10 MB default
  $VAR{MAX_FILES} : 5
  $VAR{DATE_FORMAT} : "%Y-%m-%d"
  $VAR{TIMESTAMP_FORMAT} : "%H:%M:%S.%f"
  $VAR{ROOT_LOG_LEVEL} : WARNING         # Root logger level
  $VAR{EN} : true

  $VAR{DEFAULT_HANDLER} : 
    fileio: 
        enabled: false
    console:
        enabled : false
    log_to_window:
        enabled : ${EN}
      




application:
  Information:
    name: "Bluetool"
    version: "1.0.0"
    $VAR{APP_ENV}: development

  # Environment-specific overrides
  environments:
    development:
      logging:
        default_level: DEBUG
        console_enabled: true
        
    production:
      logging:
        default_level: INFO
        console_enabled: false
        syslog_enabled: true
        
    testing:
      logging:
        default_level: DEBUG
        file_enabled: false
        console_format: "%(name)s - %(message)s"

#========================================================================
# ###################    include the other modules also from here #######
# =======================================================================

# include the logger file that contains the logging configurations , version.yml
include : [ logger.yml ,  version.yml]